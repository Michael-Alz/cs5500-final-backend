# docker-compose.dev.yml
# Dev stack: backend (reload), database (internal), pgAdmin (web)
name: 5500_backend_dev
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev   # use the dev image with --reload
    container_name: 5500_backend_dev
    env_file:
      - .env.dev.docker            # Docker-side dev env
    environment:
      - APP_ENV=dev                # explicit dev mode
    ports:
      - "${HOST_PORT:-8000}:${PORT:-8000}"  # host:container
    volumes:
      - ./app:/app/app             # live reload source (dev only)
      - ./alembic:/app/alembic     # live reload migrations
      - ./scripts:/app/scripts     # live reload scripts
    networks:
      - 5500_network
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${PORT:-8000}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  database:
    image: postgres:15-alpine
    container_name: 5500_database_dev
    environment:
      POSTGRES_DB: class_connect_db
      POSTGRES_USER: class_connect_user
      POSTGRES_PASSWORD: class_connect_password
      # For dev only; remove in prod
      # POSTGRES_HOST_AUTH_METHOD: trust
    expose:
      - "5432"                      # internal only; not mapped to host
    volumes:
      - 5500_postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - 5500_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U class_connect_user -d class_connect_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: 5500_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@classconnect.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    ports:
      - "5050:80"                   # http://localhost:5050
    volumes:
      - 5500_pgadmin_data:/var/lib/pgadmin
    networks:
      - 5500_network
    depends_on:
      - database
    restart: unless-stopped

volumes:
  5500_postgres_data:
  5500_pgadmin_data:

networks:
  5500_network:
    driver: bridge
